
//주어진 코드에는 몇 가지 오류가 있습니다:
//
//함수 function에서 최대공약수를 구하는 로직이 잘못되었습니다. 현재 코드에서는 가장 작은 수 min부터 시작하여 각 수가 모두 i로 나누어 떨어지는지를 확인합니다. 하지만 이렇게 하면 최대공약수가 아닌 최소공배수를 찾게 됩니다.
//
//함수의 return 문이 조건문 안에 있어서 조건이 충족되는 경우에만 반환되고, 아니면 -1이 반환됩니다. 이는 원하는 결과를 얻지 못할 것입니다.
//
//function 메서드에서의 주석 부분이 함수 내부에 있어서 주석 처리된 부분으로 인식될 수 있습니다.
//
//아래는 수정된 코드입니다:


package Train240309;

public class C1 {

    // abc 중에서 가장 작은 수 min 구하고, 최대공약수 구하기
    public static int function(int a, int b, int c) {
        int min = a;
        if (b < min) {
            min = b;
        }
        if (c < min) {
            min = c;
        }
              //min이 i값으로 대입되고, min이 0보다 클때, min에서 1씩 뺀다
        
//        int i = min;: 반복문을 시작할 때 변수 i를 min의 값으로 초기화합니다. 여기서 min은 주어진 세 숫자 a, b, c 중 가장 작은 값입니다.
//        i > 0;: 반복문을 실행하는 동안 변수 i가 0보다 큰지 확인합니다. 0보다 크면 반복문을 계속 실행하고, 0보다 작거나 같으면 반복문을 종료합니다.
//        i--: 각 반복이 끝날 때마다 변수 i의 값을 1씩 감소시킵니다.
        for (int i = min; i > 0; i--) {
            if (a % i == 0 && b % i == 0 && c % i == 0) {
            	//a를 i로 나눠서 , 그 결과 남은수가 있는지 유무. 
                return i; // 최대공약수 반환
//                a b c가 모두 i로 나누어떨어지는지 확인
//                세개 공통으로 i로 나눠떨어지면 그것은 최대공약수
//                
                
                
                
                
            }
        }
        return -1; // 최대공약수가 없을 때
    }

    public static void main(String[] args) {
        int a = 400;
        int b = 300;
        int c = 750;
        System.out.println("(400,300,750)의 최대공약수: " + function(a, b, c));
    }
}